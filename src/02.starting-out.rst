Начинаем
========

.. _the-shell:

Оболочка
--------

В Erlang Вы можете проверять практически любой свой код в эмуляторе. Он
будет запускать Ваши скрипты после компиляции и развертывания, а так же
будет позволять редактировать код «на лету». Чтобы запустить оболочку в
линуксе, откройте консоль и наберите в ней ``$ erl``. Если Вы всё правильно
установили, то Вы должны увидеть текст, подобный следующему::

    Erlang R13B01 (erts-5.7.2) [source] [smp:2:2] [rq:2] [async-threads:0] [hipe] [kernel-poll:false]

    Eshell V5.7.2  (abort with ^G)

Мои поздравления, вы запустили оболочку Эрланга!

Пользователи Windows могут использовать ``erl.exe``, но рекомендуется
использовать ``werl.exe``, который находится в меню ``programs > Erlang``.
Werl — это реализация оболочки Erlang для Windows с отдельным окном,
полосами прокрутки, возможностями редактирования из коммандной строки
(например, «Копировать», «Вставить», которые доставляют массу неудобств
в стандартной оболочке Windows ``cmd.exe``). Оболочка Erl необходима,
если Вы собираетесь перенаправлять потоки ввода/вывода или использовать
pipeline'ы.

Скоро мы научимся вводить и запускать код в эмуляторе, но сначала, давайте
осмотримся вокруг.

.. _shell-commands:

Команды оболочки
----------------

Оболочка Erlang имеет встроенный редактор кода, основанный на подмножестве
Emacs, популярного текстового редактора, который используется с 70-ых годов.
Если Вы знакомы с Emacs, то для Вас не будет трудностей. Для остальных —
тоже не будет.

Прежде всего, если Вы наберёте какой-то текст, а потом нажмёте ``^A``
(Ctrl+A), то курсор переместится в начало строки. ``^E`` переместит курсор в
конец строки. Вы так же можете использовать стрелки курсора для того, чтобы
перемещаться вперед/назад или показывать предыдущие/следующие строки, чтобы
не повторять набор одного и того же текста.

Если Вы наберёте что-то вроде ``li``, а потом нажмете «tab», оболочка
дополнит термин за Вас, и в результате получится ``lists:``. Нажмиет «tab»
ещё раз, и Вы получите список доступных функций. При первом нажатии было
дополнено название Erlang модуля ``lists``, а при повторном нажатии были
извлечены все функции, которые предоставляет этот модуль. Вам может
показаться такая нотация немного странной, но не стоит переживать, Вы скоро
познакомитесь с ней поближе.

Я думаю, мы уже достаточно посмотрели на возможности оболочки, но осталась
одна мелочь — мы не знаем, как выйти из неё! Есть быстрый способ узнать,
как это сделать. Просто наберите ``help().`` (обратите внимание на точку
после скобок). В результате Вы должны получить информацию по командам,
которые Вы можете использовать в оболочке. Мы будем использовать часть
из них немного позже, а сейчас для нас важна лишь строка
``q()        -- quit - shorthand for init:stop()``. Это один из способов
выйти из оболочки (на самом деле, их два). Но он не поможет нас, если
оболочка «зависла»! Если Вы обратили внимание, когда запускали оболочку,
там был комментарий ``(abort with ^G)``. Давайте так и сделаем, а потом
нажмем ``h``, чтобы получить помощь!

::

    User switch command
    --> h
    c [nn]            - connect to job
    i [nn]            - interrupt job
    k [nn]            - kill job
    j                 - list all jobs
    s [shell]         - start local shell
    r [node [shell]]  - start remote shell
    q        - quit erlang
    ? | h             - this message
    -->

Если Вы нажмете ``i``, а потом ``c``, то Erlang должен остановить выполнение
текущего кода и вернуть управление оболочке. ``j`` покажет Вам список
запущенных процессов (звездочка после номера означает, что это тот процесс,
который Вы запустили). Работа каждого из этих процессов может быть прервана
вводом ``i`` и номером процесса. Если Вы введёте ``k``, то тем самым Вы
убъете оболочку в том виде, как она есть, а не просто прервете её. Чтобы
запустить новый процесс, нажмите ``s``.

::

    Eshell V5.7.2  (abort with ^G)
    1> "О НЕТ! ОБОЛОЧКА НЕ ОТВЕЧАЕТ!!! *жмем ctrl+G*"
    User switch command
    --> k
    --> c
    Unknown job
    --> s
    --> j
    2* {shell,start,[]}
    --> c 2
    Eshell V5.7.2  (abort with ^G)
    1> "ДА!"

Если Вы сейчас ещё раз прочтёте текст помощи, то Вы увидите, что можете
запускать удаленные оболочки. Я сейчас не хочу вдаваться в детали, но это
должно дать Вам представление о том, что виртуальная машина Erlang может
делать помимо выполнения кода.

А теперь, давайте начнём (по настоящему).
